{"ast":null,"code":"var _jsxFileName = \"C:\\\\Studium_Data\\\\IV_Assigment_2\\\\IV-Geographical-Mapping-Visualizator\\\\UE\\\\Assignment_2\\\\src\\\\components\\\\ArtVisCollaborationNetwork.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\n\n// Expanded type definitions to handle D3 force simulation properly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtVisCollaborationNetwork = () => {\n  _s();\n  const svgRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const [data, setData] = useState(null);\n  const [minEdgeWeight, setMinEdgeWeight] = useState(20);\n  const [sortConfig, setSortConfig] = useState(null);\n  const fetchCollaborationData = async () => {\n    try {\n      const response = await fetch('/data/artist_collaboration_network.json');\n      if (!response.ok) throw new Error('Failed to fetch network data');\n      const jsonData = await response.json();\n\n      // Calculate total weight of connections for each node\n      const nodeWeights = new Map();\n      jsonData.links.forEach(link => {\n        // Safely extract source and target IDs\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        const weight = link.weight || 0;\n\n        // Ensure we're working with numbers\n        if (typeof sourceId === 'number' && typeof targetId === 'number') {\n          nodeWeights.set(sourceId, (nodeWeights.get(sourceId) || 0) + weight);\n          if (sourceId !== targetId) {\n            nodeWeights.set(targetId, (nodeWeights.get(targetId) || 0) + weight);\n          }\n        }\n      });\n\n      // Add weights to nodes\n      jsonData.nodes = jsonData.nodes.map(node => ({\n        ...node,\n        weight: nodeWeights.get(node.id) || 0,\n        exhibitions_count: nodeWeights.get(node.id) || 0\n      }));\n      setData(jsonData);\n    } catch (error) {\n      console.error('Error fetching network data:', error);\n      setData(null);\n    }\n  };\n  const filteredData = () => {\n    if (!data) return {\n      nodes: [],\n      links: []\n    };\n\n    // Filter out self-loops and low weight connections\n    const validLinks = data.links.filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return (link.weight || 0) >= minEdgeWeight && sourceId !== targetId;\n    });\n\n    // Create a Set of used node IDs, ensuring they're all numbers\n    const usedNodeIds = new Set(validLinks.flatMap(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return [sourceId, targetId];\n    }).filter(id => typeof id === 'number'));\n\n    // Keep only nodes that appear in remaining links\n    const validNodes = data.nodes.filter(node => usedNodeIds.has(node.id));\n    return {\n      nodes: validNodes,\n      links: validLinks\n    };\n  };\n  useEffect(() => {\n    fetchCollaborationData();\n  }, []);\n\n  // D3 visualization code\n  useEffect(() => {\n    if (!data || !svgRef.current) return;\n    const {\n      nodes,\n      links\n    } = filteredData();\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const width = 900;\n    const height = 500;\n\n    // Create the force simulation\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(links).id(d => d.id).distance(100)).force('charge', d3.forceManyBody().strength(-200)).force('center', d3.forceCenter(width / 2, height / 2)).force('collide', d3.forceCollide().radius(30));\n    const g = svg.append('g');\n\n    // Draw links\n    const maxWeight = d3.max(links, d => d.weight || 0) || 1;\n    const linkScale = d3.scaleLinear().domain([minEdgeWeight, maxWeight]).range([0.2, 1]);\n    const linkSelection = g.selectAll('line').data(links).enter().append('line').attr('stroke', '#999').attr('stroke-opacity', d => linkScale(d.weight || 0)).attr('stroke-width', d => Math.sqrt((d.weight || 1) / 5));\n\n    // Draw nodes\n    const maxExhibitions = d3.max(nodes, d => d.exhibitions_count || 0) || 1;\n    const sizeScale = d3.scaleSqrt().domain([0, maxExhibitions]).range([5, 20]);\n    const nodeSelection = g.selectAll('circle').data(nodes).enter().append('circle').attr('r', d => sizeScale(d.exhibitions_count || 0)).attr('fill', d => d3.schemeCategory10[d.id % 10]).attr('stroke', '#fff').attr('stroke-width', 2);\n\n    // Add tooltips\n    const tooltip = d3.select(tooltipRef.current);\n    nodeSelection.on('mouseover', (event, d) => {\n      tooltip.style('visibility', 'visible').html(`\n            <strong>${d.firstname} ${d.lastname}</strong><br/>\n            Nationality: ${d.nationality}<br/>\n            Total Exhibitions: ${d.exhibitions_count}<br/>\n          `);\n    }).on('mousemove', event => {\n      tooltip.style('top', `${event.pageY + 10}px`).style('left', `${event.pageX + 10}px`);\n    }).on('mouseout', () => {\n      tooltip.style('visibility', 'hidden');\n    });\n\n    // Add zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.5, 4]).on('zoom', event => {\n      g.attr('transform', event.transform);\n    });\n    svg.call(zoom);\n\n    // Update positions on simulation tick\n    simulation.on('tick', () => {\n      linkSelection.attr('x1', d => d.source.x || 0).attr('y1', d => d.source.y || 0).attr('x2', d => d.target.x || 0).attr('y2', d => d.target.y || 0);\n      nodeSelection.attr('cx', d => d.x || 0).attr('cy', d => d.y || 0);\n    });\n  }, [data, minEdgeWeight]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Artist Collaboration Network\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: 900,\n        height: 500,\n        className: \"border border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: tooltipRef,\n        className: \"absolute hidden bg-white p-2 border border-gray-300 rounded shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          children: [\"Minimum Connection Weight: \", minEdgeWeight, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"100\",\n            value: minEdgeWeight,\n            onChange: e => setMinEdgeWeight(parseInt(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtVisCollaborationNetwork, \"YIfSnHTx1fJ8TKC3LxK/286tfpQ=\");\n_c = ArtVisCollaborationNetwork;\nexport default ArtVisCollaborationNetwork;\nvar _c;\n$RefreshReg$(_c, \"ArtVisCollaborationNetwork\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","ArtVisCollaborationNetwork","_s","svgRef","tooltipRef","data","setData","minEdgeWeight","setMinEdgeWeight","sortConfig","setSortConfig","fetchCollaborationData","response","fetch","ok","Error","jsonData","json","nodeWeights","Map","links","forEach","link","sourceId","source","id","targetId","target","weight","set","get","nodes","map","node","exhibitions_count","error","console","filteredData","validLinks","filter","usedNodeIds","Set","flatMap","validNodes","has","current","svg","select","selectAll","remove","width","height","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","forceCollide","radius","g","append","maxWeight","max","linkScale","scaleLinear","domain","range","linkSelection","enter","attr","Math","sqrt","maxExhibitions","sizeScale","scaleSqrt","nodeSelection","schemeCategory10","tooltip","on","event","style","html","firstname","lastname","nationality","pageY","pageX","zoom","scaleExtent","transform","call","x","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","min","value","onChange","e","parseInt","_c","$RefreshReg$"],"sources":["C:/Studium_Data/IV_Assigment_2/IV-Geographical-Mapping-Visualizator/UE/Assignment_2/src/components/ArtVisCollaborationNetwork.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// Expanded type definitions to handle D3 force simulation properly\r\ninterface NodeDatum extends d3.SimulationNodeDatum {\r\n  id: number;\r\n  firstname?: string;\r\n  lastname?: string;\r\n  nationality?: string;\r\n  exhibitions_count?: number;\r\n  weight?: number;\r\n}\r\n\r\ninterface LinkDatum extends d3.SimulationLinkDatum<NodeDatum> {\r\n  source: number | NodeDatum;\r\n  target: number | NodeDatum;\r\n  weight?: number;\r\n}\r\n\r\ninterface GraphData {\r\n  nodes: NodeDatum[];\r\n  links: LinkDatum[];\r\n}\r\n\r\nconst ArtVisCollaborationNetwork: React.FC = () => {\r\n  const svgRef = useRef<SVGSVGElement | null>(null);\r\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\r\n  const [data, setData] = useState<GraphData | null>(null);\r\n  const [minEdgeWeight, setMinEdgeWeight] = useState<number>(20);\r\n  const [sortConfig, setSortConfig] = useState<{\r\n    key: 'id' | 'nationality' | 'exhibitions_count';\r\n    direction: 'asc' | 'desc';\r\n  } | null>(null);\r\n\r\n  const fetchCollaborationData = async () => {\r\n    try {\r\n      const response = await fetch('/data/artist_collaboration_network.json');\r\n      if (!response.ok) throw new Error('Failed to fetch network data');\r\n      const jsonData: GraphData = await response.json();\r\n\r\n      // Calculate total weight of connections for each node\r\n      const nodeWeights = new Map<number, number>();\r\n      \r\n      jsonData.links.forEach(link => {\r\n        // Safely extract source and target IDs\r\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\r\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\r\n        const weight = link.weight || 0;\r\n\r\n        // Ensure we're working with numbers\r\n        if (typeof sourceId === 'number' && typeof targetId === 'number') {\r\n          nodeWeights.set(sourceId, (nodeWeights.get(sourceId) || 0) + weight);\r\n          if (sourceId !== targetId) {\r\n            nodeWeights.set(targetId, (nodeWeights.get(targetId) || 0) + weight);\r\n          }\r\n        }\r\n      });\r\n\r\n      // Add weights to nodes\r\n      jsonData.nodes = jsonData.nodes.map(node => ({\r\n        ...node,\r\n        weight: nodeWeights.get(node.id) || 0,\r\n        exhibitions_count: nodeWeights.get(node.id) || 0\r\n      }));\r\n\r\n      setData(jsonData);\r\n    } catch (error) {\r\n      console.error('Error fetching network data:', error);\r\n      setData(null);\r\n    }\r\n  };\r\n\r\n  const filteredData = () => {\r\n    if (!data) return { nodes: [], links: [] };\r\n\r\n    // Filter out self-loops and low weight connections\r\n    const validLinks = data.links.filter(link => {\r\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\r\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\r\n      return (link.weight || 0) >= minEdgeWeight && sourceId !== targetId;\r\n    });\r\n\r\n    // Create a Set of used node IDs, ensuring they're all numbers\r\n    const usedNodeIds = new Set(\r\n      validLinks.flatMap(link => {\r\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\r\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\r\n        return [sourceId, targetId];\r\n      }).filter((id): id is number => typeof id === 'number')\r\n    );\r\n\r\n    // Keep only nodes that appear in remaining links\r\n    const validNodes = data.nodes.filter(node => usedNodeIds.has(node.id));\r\n    return { nodes: validNodes, links: validLinks };\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCollaborationData();\r\n  }, []);\r\n\r\n  // D3 visualization code\r\n  useEffect(() => {\r\n    if (!data || !svgRef.current) return;\r\n\r\n    const { nodes, links } = filteredData();\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove();\r\n\r\n    const width = 900;\r\n    const height = 500;\r\n\r\n    // Create the force simulation\r\n    const simulation = d3\r\n      .forceSimulation<NodeDatum>(nodes)\r\n      .force('link', d3.forceLink<NodeDatum, LinkDatum>(links)\r\n        .id(d => d.id)\r\n        .distance(100))\r\n      .force('charge', d3.forceManyBody().strength(-200))\r\n      .force('center', d3.forceCenter(width / 2, height / 2))\r\n      .force('collide', d3.forceCollide().radius(30));\r\n\r\n    const g = svg.append('g');\r\n\r\n    // Draw links\r\n    const maxWeight = d3.max(links, d => d.weight || 0) || 1;\r\n    const linkScale = d3.scaleLinear()\r\n      .domain([minEdgeWeight, maxWeight])\r\n      .range([0.2, 1]);\r\n\r\n    const linkSelection = g\r\n      .selectAll<SVGLineElement, LinkDatum>('line')\r\n      .data(links)\r\n      .enter()\r\n      .append('line')\r\n      .attr('stroke', '#999')\r\n      .attr('stroke-opacity', d => linkScale(d.weight || 0))\r\n      .attr('stroke-width', d => Math.sqrt((d.weight || 1) / 5));\r\n\r\n    // Draw nodes\r\n    const maxExhibitions = d3.max(nodes, d => d.exhibitions_count || 0) || 1;\r\n    const sizeScale = d3.scaleSqrt()\r\n      .domain([0, maxExhibitions])\r\n      .range([5, 20]);\r\n\r\n    const nodeSelection = g\r\n      .selectAll<SVGCircleElement, NodeDatum>('circle')\r\n      .data(nodes)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('r', d => sizeScale(d.exhibitions_count || 0))\r\n      .attr('fill', d => d3.schemeCategory10[d.id % 10])\r\n      .attr('stroke', '#fff')\r\n      .attr('stroke-width', 2);\r\n\r\n    // Add tooltips\r\n    const tooltip = d3.select(tooltipRef.current);\r\n    nodeSelection\r\n      .on('mouseover', (event, d) => {\r\n        tooltip\r\n          .style('visibility', 'visible')\r\n          .html(`\r\n            <strong>${d.firstname} ${d.lastname}</strong><br/>\r\n            Nationality: ${d.nationality}<br/>\r\n            Total Exhibitions: ${d.exhibitions_count}<br/>\r\n          `);\r\n      })\r\n      .on('mousemove', (event) => {\r\n        tooltip\r\n          .style('top', `${event.pageY + 10}px`)\r\n          .style('left', `${event.pageX + 10}px`);\r\n      })\r\n      .on('mouseout', () => {\r\n        tooltip.style('visibility', 'hidden');\r\n      });\r\n\r\n    // Add zoom behavior\r\n    const zoom = d3.zoom<SVGSVGElement, unknown>()\r\n      .scaleExtent([0.5, 4])\r\n      .on('zoom', (event) => {\r\n        g.attr('transform', event.transform);\r\n      });\r\n\r\n    svg.call(zoom);\r\n\r\n    // Update positions on simulation tick\r\n    simulation.on('tick', () => {\r\n      linkSelection\r\n        .attr('x1', d => (d.source as NodeDatum).x || 0)\r\n        .attr('y1', d => (d.source as NodeDatum).y || 0)\r\n        .attr('x2', d => (d.target as NodeDatum).x || 0)\r\n        .attr('y2', d => (d.target as NodeDatum).y || 0);\r\n\r\n      nodeSelection\r\n        .attr('cx', d => d.x || 0)\r\n        .attr('cy', d => d.y || 0);\r\n    });\r\n  }, [data, minEdgeWeight]);\r\n\r\n  return (\r\n    <div className=\"p-5 flex flex-col items-center\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Artist Collaboration Network</h1>\r\n      \r\n      <div className=\"w-full max-w-4xl\">\r\n        <svg\r\n          ref={svgRef}\r\n          width={900}\r\n          height={500}\r\n          className=\"border border-gray-300\"\r\n        />\r\n        \r\n        <div ref={tooltipRef} className=\"absolute hidden bg-white p-2 border border-gray-300 rounded shadow\" />\r\n        \r\n        <div className=\"mt-4\">\r\n          <label className=\"block mb-2\">\r\n            Minimum Connection Weight: {minEdgeWeight}\r\n            <input\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"100\"\r\n              value={minEdgeWeight}\r\n              onChange={e => setMinEdgeWeight(parseInt(e.target.value))}\r\n              className=\"w-full\"\r\n            />\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtVisCollaborationNetwork;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}