{"ast":null,"code":"var _jsxFileName = \"C:\\\\Studium_Data\\\\RealTimeVizData\\\\GeoFinanceMap\\\\src\\\\components\\\\GeoView1.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nameToIsoA3Map = {\n  Germany: 'DEU',\n  Austria: 'AUT',\n  Belgium: 'BEL',\n  Czechia: 'CZE',\n  Switzerland: 'CHE',\n  'United States of America': 'USA',\n  Ukraine: 'UKR',\n  Australia: 'AUS',\n  Spain: 'ESP',\n  France: 'FRA',\n  Hungary: 'HUN',\n  Italy: 'ITA',\n  Japan: 'JPN',\n  Lithuania: 'LTU',\n  Netherlands: 'NLD',\n  Poland: 'POL',\n  Russia: 'RUS',\n  Sweden: 'SWE',\n  Unknown: 'Unknown'\n};\nconst importantDates = [{\n  year: 1912,\n  description: 'Titanic Sinks'\n}, {\n  year: 1914,\n  description: 'Start of WWI'\n}];\nconst GeoView1 = () => {\n  _s();\n  var _importantDates$find;\n  const svgRef = useRef(null);\n  const legendRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const [year, setYear] = useState(1905);\n  const [minExhibitions, setMinExhibitions] = useState(1);\n  const [worldMap, setWorldMap] = useState(null);\n  const [data, setData] = useState(null);\n  const [maxExhibitions, setMaxExhibitions] = useState(5000);\n  const [sortConfig, setSortConfig] = useState(null);\n  const fetchWorldMap = async () => {\n    try {\n      const response = await fetch('https://unpkg.com/world-atlas@2.0.2/countries-110m.json');\n      if (!response.ok) throw new Error('Failed to fetch world map');\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching world map:', error);\n      return null;\n    }\n  };\n  const fetchData = async () => {\n    try {\n      const response = await fetch('/data/1_geographic_timeline.json');\n      if (!response.ok) throw new Error('Failed to fetch data');\n      const exhibitionData = await response.json();\n      const maxExhibitions = Math.max(...Object.values(exhibitionData).flatMap(d => d.data.map(entry => entry.num_exhibitions)));\n      setMaxExhibitions(maxExhibitions);\n      return exhibitionData;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const loadData = async () => {\n      const mapData = await fetchWorldMap();\n      const exhibitionData = await fetchData();\n      setWorldMap(mapData);\n      setData(exhibitionData);\n    };\n    loadData();\n  }, []);\n  const summaryData = () => {\n    if (!data) return [];\n    let result = Object.entries(data).map(([key, value]) => {\n      const yearData = value.data.find(entry => entry.e_startdate === year);\n      return {\n        country: value.country_name,\n        numExhibitions: (yearData === null || yearData === void 0 ? void 0 : yearData.num_exhibitions) || 0\n      };\n    }).filter(entry => entry.numExhibitions >= minExhibitions);\n    if (sortConfig) {\n      result = result.sort((a, b) => {\n        const key = sortConfig.key; // Explicitly assert the key type\n        if (a[key] < b[key]) return sortConfig.direction === 'asc' ? -1 : 1;\n        if (a[key] > b[key]) return sortConfig.direction === 'asc' ? 1 : -1;\n        return 0;\n      });\n    }\n    return result;\n  };\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  const exportData = () => {\n    const blob = new Blob([JSON.stringify(summaryData(), null, 2)], {\n      type: 'application/json'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'exhibitions_data.json';\n    link.click();\n  };\n  useEffect(() => {\n    if (!worldMap || !data || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const tooltip = d3.select(tooltipRef.current);\n    const width = 900;\n    const height = 500;\n    const geoJSON = topojson.feature(worldMap, worldMap.objects.countries);\n    const projection = d3.geoMercator().fitSize([width, height], geoJSON);\n    const pathGenerator = d3.geoPath().projection(projection);\n    const colorScale = d3.scaleSequentialLog(d3.interpolateReds).domain([1, maxExhibitions]);\n    const zoom = d3.zoom().scaleExtent([1, 8]).translateExtent([[0, 0], [width, height]]).on('zoom', event => {\n      svg.select('g').attr('transform', event.transform);\n    });\n    svg.call(zoom);\n    const g = svg.append('g');\n    g.selectAll('path').data(geoJSON.features).enter().append('path').attr('d', pathGenerator).attr('fill', d => {\n      var _d$properties, _d$properties2;\n      const countryCode = ((_d$properties = d.properties) === null || _d$properties === void 0 ? void 0 : _d$properties.iso_a3) || nameToIsoA3Map[(_d$properties2 = d.properties) === null || _d$properties2 === void 0 ? void 0 : _d$properties2.name];\n      if (!countryCode) return '#ccc';\n      const countryData = data[countryCode];\n      if (!countryData) return '#ccc';\n      const yearData = countryData.data.find(entry => entry.e_startdate === year);\n      const numExhibitions = (yearData === null || yearData === void 0 ? void 0 : yearData.num_exhibitions) || 0;\n      return numExhibitions >= minExhibitions ? colorScale(numExhibitions) : '#ccc';\n    }).attr('stroke', '#ffffff').on('mouseover', (event, d) => {\n      var _d$properties3, _d$properties4, _d$properties5;\n      const countryName = ((_d$properties3 = d.properties) === null || _d$properties3 === void 0 ? void 0 : _d$properties3.name) || 'Unknown';\n      const countryCode = ((_d$properties4 = d.properties) === null || _d$properties4 === void 0 ? void 0 : _d$properties4.iso_a3) || nameToIsoA3Map[(_d$properties5 = d.properties) === null || _d$properties5 === void 0 ? void 0 : _d$properties5.name];\n      const countryData = data[countryCode];\n      const yearData = countryData === null || countryData === void 0 ? void 0 : countryData.data.find(entry => entry.e_startdate === year);\n      const numExhibitions = (yearData === null || yearData === void 0 ? void 0 : yearData.num_exhibitions) || 0;\n      tooltip.style('visibility', 'visible').html(`\n                        <strong>${countryName}</strong><br>\n                        Exhibitions: ${numExhibitions}\n                    `);\n    }).on('mousemove', event => {\n      tooltip.style('top', `${event.pageY + 10}px`).style('left', `${event.pageX + 10}px`);\n    }).on('mouseout', () => {\n      tooltip.style('visibility', 'hidden');\n    });\n    const legend = d3.select(legendRef.current);\n    legend.selectAll('*').remove();\n    const legendHeight = 300;\n    const legendWidth = 20;\n    const legendScale = d3.scaleLog().domain(colorScale.domain()).range([legendHeight, 0]);\n    const legendAxis = d3.axisRight(legendScale).ticks(5, '~s').tickSize(6);\n    const gradient = legend.append('defs').append('linearGradient').attr('id', 'legend-gradient').attr('x1', '0%').attr('x2', '0%').attr('y1', '100%').attr('y2', '0%');\n    const gradientStops = d3.range(0, 1.1, 0.1).map(t => ({\n      t,\n      color: colorScale(colorScale.domain()[0] * (colorScale.domain()[1] / colorScale.domain()[0]) ** t)\n    }));\n    gradient.selectAll('stop').data(gradientStops).enter().append('stop').attr('offset', d => `${d.t * 100}%`).attr('stop-color', d => d.color);\n    legend.append('rect').attr('width', legendWidth).attr('height', legendHeight).style('fill', 'url(#legend-gradient)').attr('x', 0).attr('y', 20);\n    legend.append('g').attr('transform', `translate(${legendWidth}, 20)`).call(legendAxis);\n    legend.append('text').attr('x', -legendHeight / 2 - 20).attr('y', -30).attr('transform', `rotate(-90)`).style('text-anchor', 'middle').text('Number of Exhibitions');\n  }, [worldMap, data, year, minExhibitions, maxExhibitions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        alignSelf: 'flex-start',\n        marginBottom: '10px',\n        padding: '10px 20px',\n        fontSize: '14px',\n        cursor: 'pointer'\n      },\n      onClick: () => window.location.href = '/',\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Geographical Heatmap of Exhibitions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        maxWidth: '600px',\n        textAlign: 'center',\n        margin: '10px 0'\n      },\n      children: [\"This map visualizes the number of exhibitions held in various countries between 1902 and 1915. You are currently viewing data for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 52\n      }, this), importantDates.some(date => date.year === year) && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red',\n          fontWeight: 'bold'\n        },\n        children: [' ', \"(\", (_importantDates$find = importantDates.find(date => date.year === year)) === null || _importantDates$find === void 0 ? void 0 : _importantDates$find.description, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this), \". Use the sliders below to explore the data for different years and set the minimum number of exhibitions required to display a country.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: 900,\n        height: 500,\n        style: {\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: legendRef,\n        width: 100,\n        height: 350,\n        style: {\n          marginLeft: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: tooltipRef,\n      style: {\n        position: 'absolute',\n        visibility: 'hidden',\n        background: '#fff',\n        padding: '5px',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        pointerEvents: 'none',\n        zIndex: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1902\",\n          max: \"1915\",\n          value: year,\n          onChange: e => setYear(parseInt(e.target.value, 10)),\n          style: {\n            width: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Year: \", year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: maxExhibitions,\n          value: minExhibitions,\n          onChange: e => setMinExhibitions(parseInt(e.target.value, 10)),\n          style: {\n            width: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Minimum Exhibitions: \", minExhibitions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        marginTop: '20px',\n        borderCollapse: 'collapse',\n        width: '80%',\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: '#f2f2f2'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px',\n              border: '1px solid #ddd'\n            },\n            children: [\"Country\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('country'),\n              style: {\n                marginLeft: '10px',\n                backgroundColor: '#ddd',\n                border: 'none',\n                cursor: 'pointer',\n                padding: '5px'\n              },\n              children: \"Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px',\n              border: '1px solid #ddd'\n            },\n            children: [\"Exhibitions\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('numExhibitions'),\n              style: {\n                marginLeft: '10px',\n                backgroundColor: '#ddd',\n                border: 'none',\n                cursor: 'pointer',\n                padding: '5px'\n              },\n              children: \"Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: summaryData().map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '10px',\n              border: '1px solid #ddd'\n            },\n            children: entry.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '10px',\n              border: '1px solid #ddd'\n            },\n            children: entry.numExhibitions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        fontSize: '14px',\n        cursor: 'pointer'\n      },\n      onClick: exportData,\n      children: \"Export Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 9\n  }, this);\n};\n_s(GeoView1, \"nKXTnOcEURSppTM74h3kC7b2XBc=\");\n_c = GeoView1;\nexport default GeoView1;\nvar _c;\n$RefreshReg$(_c, \"GeoView1\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","topojson","jsxDEV","_jsxDEV","nameToIsoA3Map","Germany","Austria","Belgium","Czechia","Switzerland","Ukraine","Australia","Spain","France","Hungary","Italy","Japan","Lithuania","Netherlands","Poland","Russia","Sweden","Unknown","importantDates","year","description","GeoView1","_s","_importantDates$find","svgRef","legendRef","tooltipRef","setYear","minExhibitions","setMinExhibitions","worldMap","setWorldMap","data","setData","maxExhibitions","setMaxExhibitions","sortConfig","setSortConfig","fetchWorldMap","response","fetch","ok","Error","json","error","console","fetchData","exhibitionData","Math","max","Object","values","flatMap","d","map","entry","num_exhibitions","loadData","mapData","summaryData","result","entries","key","value","yearData","find","e_startdate","country","country_name","numExhibitions","filter","sort","a","b","direction","handleSort","exportData","blob","Blob","JSON","stringify","type","link","document","createElement","href","URL","createObjectURL","download","click","current","svg","select","selectAll","remove","tooltip","width","height","geoJSON","feature","objects","countries","projection","geoMercator","fitSize","pathGenerator","geoPath","colorScale","scaleSequentialLog","interpolateReds","domain","zoom","scaleExtent","translateExtent","on","event","attr","transform","call","g","append","features","enter","_d$properties","_d$properties2","countryCode","properties","iso_a3","name","countryData","_d$properties3","_d$properties4","_d$properties5","countryName","style","html","pageY","pageX","legend","legendHeight","legendWidth","legendScale","scaleLog","range","legendAxis","axisRight","ticks","tickSize","gradient","gradientStops","t","color","text","padding","display","flexDirection","alignItems","children","alignSelf","marginBottom","fontSize","cursor","onClick","window","location","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","textAlign","margin","some","date","fontWeight","justifyContent","ref","border","marginLeft","position","visibility","background","borderRadius","pointerEvents","zIndex","marginTop","min","onChange","e","parseInt","target","borderCollapse","backgroundColor","index","_c","$RefreshReg$"],"sources":["C:/Studium_Data/RealTimeVizData/GeoFinanceMap/src/components/GeoView1.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson-client';\r\nimport { FeatureCollection, Geometry } from 'geojson';\r\n\r\nconst nameToIsoA3Map: Record<string, string> = {\r\n    Germany: 'DEU',\r\n    Austria: 'AUT',\r\n    Belgium: 'BEL',\r\n    Czechia: 'CZE',\r\n    Switzerland: 'CHE',\r\n    'United States of America': 'USA',\r\n    Ukraine: 'UKR',\r\n    Australia: 'AUS',\r\n    Spain: 'ESP',\r\n    France: 'FRA',\r\n    Hungary: 'HUN',\r\n    Italy: 'ITA',\r\n    Japan: 'JPN',\r\n    Lithuania: 'LTU',\r\n    Netherlands: 'NLD',\r\n    Poland: 'POL',\r\n    Russia: 'RUS',\r\n    Sweden: 'SWE',\r\n    Unknown: 'Unknown',\r\n};\r\n\r\nconst importantDates = [\r\n    { year: 1912, description: 'Titanic Sinks' },\r\n    { year: 1914, description: 'Start of WWI' },\r\n];\r\n\r\nconst GeoView1 = () => {\r\n    const svgRef = useRef<SVGSVGElement | null>(null);\r\n    const legendRef = useRef<SVGSVGElement | null>(null);\r\n    const tooltipRef = useRef<HTMLDivElement | null>(null);\r\n    const [year, setYear] = useState<number>(1905);\r\n    const [minExhibitions, setMinExhibitions] = useState<number>(1);\r\n    const [worldMap, setWorldMap] = useState<any>(null);\r\n    const [data, setData] = useState<Record<string, any> | null>(null);\r\n    const [maxExhibitions, setMaxExhibitions] = useState<number>(5000);\r\n    const [sortConfig, setSortConfig] = useState<{ key: 'country' | 'numExhibitions'; direction: 'asc' | 'desc' } | null>(null);\r\n\r\n    const fetchWorldMap = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                'https://unpkg.com/world-atlas@2.0.2/countries-110m.json'\r\n            );\r\n            if (!response.ok) throw new Error('Failed to fetch world map');\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error fetching world map:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('/data/1_geographic_timeline.json');\r\n            if (!response.ok) throw new Error('Failed to fetch data');\r\n            const exhibitionData = await response.json();\r\n\r\n            const maxExhibitions = Math.max(\r\n                ...Object.values(exhibitionData).flatMap((d: any) =>\r\n                    d.data.map((entry: any) => entry.num_exhibitions)\r\n                )\r\n            );\r\n            setMaxExhibitions(maxExhibitions);\r\n\r\n            return exhibitionData;\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const mapData = await fetchWorldMap();\r\n            const exhibitionData = await fetchData();\r\n            setWorldMap(mapData);\r\n            setData(exhibitionData);\r\n        };\r\n        loadData();\r\n    }, []);\r\n\r\n    const summaryData = () => {\r\n        if (!data) return [];\r\n        let result = Object.entries(data)\r\n            .map(([key, value]: [string, any]) => {\r\n                const yearData = value.data.find((entry: any) => entry.e_startdate === year);\r\n                return {\r\n                    country: value.country_name,\r\n                    numExhibitions: yearData?.num_exhibitions || 0,\r\n                };\r\n            })\r\n            .filter((entry) => entry.numExhibitions >= minExhibitions);\r\n\r\n        if (sortConfig) {\r\n            result = result.sort((a, b) => {\r\n                const key = sortConfig.key as keyof typeof a; // Explicitly assert the key type\r\n                if (a[key] < b[key]) return sortConfig.direction === 'asc' ? -1 : 1;\r\n                if (a[key] > b[key]) return sortConfig.direction === 'asc' ? 1 : -1;\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    const handleSort = (key: 'country' | 'numExhibitions') => {\r\n        let direction: 'asc' | 'desc' = 'asc';\r\n        if (sortConfig && sortConfig.key === key && sortConfig.direction === 'asc') {\r\n            direction = 'desc';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    const exportData = () => {\r\n        const blob = new Blob([JSON.stringify(summaryData(), null, 2)], {\r\n            type: 'application/json',\r\n        });\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = 'exhibitions_data.json';\r\n        link.click();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!worldMap || !data || !svgRef.current) return;\r\n\r\n        const svg = d3.select(svgRef.current as SVGSVGElement);\r\n        svg.selectAll('*').remove();\r\n\r\n        const tooltip = d3.select(tooltipRef.current);\r\n\r\n        const width = 900;\r\n        const height = 500;\r\n\r\n        const geoJSON: FeatureCollection<Geometry> = topojson.feature(\r\n            worldMap,\r\n            worldMap.objects.countries\r\n        ) as unknown as FeatureCollection<Geometry>;\r\n\r\n        const projection = d3.geoMercator().fitSize([width, height], geoJSON);\r\n        const pathGenerator = d3.geoPath().projection(projection);\r\n\r\n        const colorScale = d3\r\n            .scaleSequentialLog(d3.interpolateReds)\r\n            .domain([1, maxExhibitions]);\r\n\r\n        const zoom = d3.zoom<SVGSVGElement, unknown>()\r\n            .scaleExtent([1, 8])\r\n            .translateExtent([[0, 0], [width, height]])\r\n            .on('zoom', (event) => {\r\n                svg.select('g').attr('transform', event.transform);\r\n            });\r\n\r\n        svg.call(zoom);\r\n\r\n        const g = svg.append('g');\r\n\r\n        g.selectAll('path')\r\n            .data(geoJSON.features)\r\n            .enter()\r\n            .append('path')\r\n            .attr('d', pathGenerator as any)\r\n            .attr('fill', (d: any) => {\r\n                const countryCode = d.properties?.iso_a3 || nameToIsoA3Map[d.properties?.name];\r\n                if (!countryCode) return '#ccc';\r\n                const countryData = data[countryCode];\r\n                if (!countryData) return '#ccc';\r\n                const yearData = countryData.data.find(\r\n                    (entry: any) => entry.e_startdate === year\r\n                );\r\n                const numExhibitions = yearData?.num_exhibitions || 0;\r\n                return numExhibitions >= minExhibitions ? colorScale(numExhibitions) : '#ccc';\r\n            })\r\n            .attr('stroke', '#ffffff')\r\n            .on('mouseover', (event, d: any) => {\r\n                const countryName = d.properties?.name || 'Unknown';\r\n                const countryCode = d.properties?.iso_a3 || nameToIsoA3Map[d.properties?.name];\r\n                const countryData = data[countryCode];\r\n                const yearData = countryData?.data.find(\r\n                    (entry: any) => entry.e_startdate === year\r\n                );\r\n                const numExhibitions = yearData?.num_exhibitions || 0;\r\n\r\n                tooltip.style('visibility', 'visible')\r\n                    .html(`\r\n                        <strong>${countryName}</strong><br>\r\n                        Exhibitions: ${numExhibitions}\r\n                    `);\r\n            })\r\n            .on('mousemove', (event) => {\r\n                tooltip.style('top', `${event.pageY + 10}px`)\r\n                    .style('left', `${event.pageX + 10}px`);\r\n            })\r\n            .on('mouseout', () => {\r\n                tooltip.style('visibility', 'hidden');\r\n            });\r\n\r\n        const legend = d3.select(legendRef.current);\r\n        legend.selectAll('*').remove();\r\n\r\n        const legendHeight = 300;\r\n        const legendWidth = 20;\r\n\r\n        const legendScale = d3\r\n            .scaleLog()\r\n            .domain(colorScale.domain())\r\n            .range([legendHeight, 0]);\r\n\r\n        const legendAxis = d3.axisRight(legendScale).ticks(5, '~s').tickSize(6);\r\n\r\n        const gradient = legend\r\n            .append('defs')\r\n            .append('linearGradient')\r\n            .attr('id', 'legend-gradient')\r\n            .attr('x1', '0%')\r\n            .attr('x2', '0%')\r\n            .attr('y1', '100%')\r\n            .attr('y2', '0%');\r\n\r\n        const gradientStops = d3\r\n            .range(0, 1.1, 0.1)\r\n            .map((t) => ({\r\n                t,\r\n                color: colorScale(\r\n                    colorScale.domain()[0] * (colorScale.domain()[1] / colorScale.domain()[0]) ** t\r\n                ),\r\n            }));\r\n\r\n        gradient\r\n            .selectAll('stop')\r\n            .data(gradientStops)\r\n            .enter()\r\n            .append('stop')\r\n            .attr('offset', (d) => `${d.t * 100}%`)\r\n            .attr('stop-color', (d) => d.color);\r\n\r\n        legend\r\n            .append('rect')\r\n            .attr('width', legendWidth)\r\n            .attr('height', legendHeight)\r\n            .style('fill', 'url(#legend-gradient)')\r\n            .attr('x', 0)\r\n            .attr('y', 20);\r\n\r\n        legend\r\n            .append('g')\r\n            .attr('transform', `translate(${legendWidth}, 20)`)\r\n            .call(legendAxis);\r\n\r\n        legend\r\n            .append('text')\r\n            .attr('x', -legendHeight / 2 - 20)\r\n            .attr('y', -30)\r\n            .attr('transform', `rotate(-90)`)\r\n            .style('text-anchor', 'middle')\r\n            .text('Number of Exhibitions');\r\n    }, [worldMap, data, year, minExhibitions, maxExhibitions]);\r\n\r\n    return (\r\n        <div style={{padding: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n            <button\r\n                style={{\r\n                    alignSelf: 'flex-start',\r\n                    marginBottom: '10px',\r\n                    padding: '10px 20px',\r\n                    fontSize: '14px',\r\n                    cursor: 'pointer',\r\n                }}\r\n                onClick={() => (window.location.href = '/')}\r\n            >\r\n                Go Back\r\n            </button>\r\n            <h1>Geographical Heatmap of Exhibitions</h1>\r\n            <p style={{maxWidth: '600px', textAlign: 'center', margin: '10px 0'}}>\r\n                This map visualizes the number of exhibitions held in various countries between 1902 and 1915.\r\n                You are currently viewing data for <strong>{year}</strong>\r\n                {importantDates.some((date) => date.year === year) && (\r\n                    <span style={{color: 'red', fontWeight: 'bold'}}>\r\n                        {' '}({importantDates.find((date) => date.year === year)?.description})\r\n                    </span>\r\n                )}.\r\n                Use the sliders below to explore the data for different years and set the minimum number of exhibitions\r\n                required to display a country.\r\n            </p>\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                <svg ref={svgRef} width={900} height={500} style={{border: '1px solid #ccc'}}></svg>\r\n                <svg ref={legendRef} width={100} height={350} style={{marginLeft: '10px'}}></svg>\r\n            </div>\r\n            <div\r\n                ref={tooltipRef}\r\n                style={{\r\n                    position: 'absolute',\r\n                    visibility: 'hidden',\r\n                    background: '#fff',\r\n                    padding: '5px',\r\n                    border: '1px solid #ccc',\r\n                    borderRadius: '4px',\r\n                    pointerEvents: 'none',\r\n                    zIndex: 10,\r\n                }}\r\n            ></div>\r\n            <div style={{display: 'flex', justifyContent: 'space-around', width: '100%', marginTop: '20px'}}>\r\n                <div>\r\n                    <input\r\n                        type=\"range\"\r\n                        min=\"1902\"\r\n                        max=\"1915\"\r\n                        value={year}\r\n                        onChange={(e) => setYear(parseInt(e.target.value, 10))}\r\n                        style={{width: '300px'}}\r\n                    />\r\n                    <p>Year: {year}</p>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"range\"\r\n                        min=\"1\"\r\n                        max={maxExhibitions}\r\n                        value={minExhibitions}\r\n                        onChange={(e) => setMinExhibitions(parseInt(e.target.value, 10))}\r\n                        style={{width: '300px'}}\r\n                    />\r\n                    <p>Minimum Exhibitions: {minExhibitions}</p>\r\n                </div>\r\n            </div>\r\n            <table style={{marginTop: '20px', borderCollapse: 'collapse', width: '80%', textAlign: 'left'}}>\r\n                <thead>\r\n                <tr style={{backgroundColor: '#f2f2f2'}}>\r\n                    <th style={{padding: '10px', border: '1px solid #ddd'}}>\r\n                        Country\r\n                        <button\r\n                            onClick={() => handleSort('country')}\r\n                            style={{\r\n                                marginLeft: '10px',\r\n                                backgroundColor: '#ddd',\r\n                                border: 'none',\r\n                                cursor: 'pointer',\r\n                                padding: '5px',\r\n                            }}\r\n                        >\r\n                            Sort\r\n                        </button>\r\n                    </th>\r\n                    <th style={{padding: '10px', border: '1px solid #ddd'}}>\r\n                        Exhibitions\r\n                        <button\r\n                            onClick={() => handleSort('numExhibitions')}\r\n                            style={{\r\n                                marginLeft: '10px',\r\n                                backgroundColor: '#ddd',\r\n                                border: 'none',\r\n                                cursor: 'pointer',\r\n                                padding: '5px',\r\n                            }}\r\n                        >\r\n                            Sort\r\n                        </button>\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {summaryData().map((entry, index) => (\r\n                    <tr key={index}>\r\n                        <td style={{padding: '10px', border: '1px solid #ddd'}}>{entry.country}</td>\r\n                        <td style={{padding: '10px', border: '1px solid #ddd'}}>{entry.numExhibitions}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n            <button\r\n                style={{\r\n                    marginTop: '20px',\r\n                    padding: '10px 20px',\r\n                    fontSize: '14px',\r\n                    cursor: 'pointer',\r\n                }}\r\n                onClick={exportData}\r\n            >\r\n                Export Data\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GeoView1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}